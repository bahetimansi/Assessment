package com.assessment;

import java.security.SecureRandom;
import javax.net.ssl.*;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
		disableSslVerification();
	}
	
//	@Bean
//    public RestTemplate restTemplate(RestTemplateBuilder builder) {
//        return builder.build();
//    }
	
	 private static void disableSslVerification() {
	        try {
	            TrustManager[] trustAllCerts = new TrustManager[]{
	                new X509TrustManager() {
	                    public X509Certificate[] getAcceptedIssuers() { return null; }
	                    public void checkClientTrusted(X509Certificate[] certs, String authType) { }
	                    public void checkServerTrusted(X509Certificate[] certs, String authType) { }
	                }
	            };

	            SSLContext sc = SSLContext.getInstance("SSL");
	            sc.init(null, trustAllCerts, new SecureRandom());
	            HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
	            HttpsURLConnection.setDefaultHostnameVerifier((hostname, session) -> true); // Accept all hostnames
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	    }
	}